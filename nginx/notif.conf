########################################
#
# /etc/nginx/sites-enabled/default
#
########################################

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
#
#user www-data;
#worker_processes auto;
#pid /run/nginx.pid;
#
#events {
#	worker_connections 768;
#}
#
#http {
#
#	##
#	# Basic Settings
#	##
#	tcp_nodelay on;
#	keepalive_timeout 65;
#	types_hash_max_size 2048;
#
#	include /etc/nginx/mime.types;
#	default_type application/octet-stream;
#
#	##
#	# SSL Settings
#	##
#
#	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
#	ssl_prefer_server_ciphers on;
#
#	##
#	# Logging Settings
#	##
#
#	access_log /var/log/nginx/access.log;
#	error_log /var/log/nginx/error.log;
#
#	##
#	# Gzip Settings
#	##
#
#	gzip on;
#	gzip_disable "msie6";
#}

upstream notifications.sntiitk.com {
  server localhost:3000 fail_timeout=0;
  keepalive 60;
}

# HTTP
server {
  listen 80;
  listen [::]:80;
  server_name    notifications.sntiitk.com;
  
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }
  
  location / {
    return         301 https://$server_name;
  }
}

# HTTPS - proxy requests on to local Node.js app
#server {
#        listen 443 ssl;
#        server_name localhost:443;
#
#        # ssl on;
#        # Use certificate and key provided by Let's Encrypt:
#        ssl_certificate /etc/letsencrypt/live/notifications.sntiitk.com/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/notifications.sntiitk.com/privkey.pem;
#        ssl_session_timeout 5m;
#        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#        ssl_prefer_server_ciphers on;
#        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
#
#        # Pass requests for / to localhost:
#        location / {
#                proxy_set_header X-Real-IP $remote_addr;
#                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                proxy_set_header X-NginX-Proxy true;
#                proxy_pass http://localhost:3000/;
#                proxy_ssl_session_reuse off;
#                proxy_set_header Host $http_host;
#                proxy_cache_bypass $http_upgrade;
#                proxy_redirect off;
#        }
#}
